name: Release Package and Docker Image

on:
  push:
    branches: [ main ]

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Get package version
      id: get-version
      run: |
        echo "version=$(python -c "import tomllib; print(tomllib.load(open('pyproject.toml', 'rb'))['project']['version']")" >> $GITHUB_OUTPUT

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine

    - name: Build package
      run: python -m build

    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          ${{ secrets.DOCKER_HUB_USERNAME }}/devops-mcps:latest
          ${{ secrets.DOCKER_HUB_USERNAME }}/devops-mcps:${{ steps.get-version.outputs.version }}

    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.get-version.outputs.version }}
        release_name: Release v${{ steps.get-version.outputs.version }}
        body: |
          ### Changes
          - Package version ${{ steps.get-version.outputs.version }} published to PyPI
          - Docker image ${{ steps.get-version.outputs.version }} pushed to Docker Hub
        draft: false
        prerelease: false